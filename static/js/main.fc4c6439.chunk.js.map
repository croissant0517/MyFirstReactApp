{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","id","name","email","className","src","alt","CardList","robotsCard","map","robotsItems","index","SearchBox","useState","searchState","setSearchState","onChange","e","target","value","onSearch","type","placeholder","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","initialRobotList","setinitialRobotList","robotList","setRobotList","useEffect","fetch","response","json","users","handleUsers","length","filter","robot","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sBCQCQ,MAbf,SAAcC,GACV,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAClB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACpD,sBAAKF,UAAU,GAAf,UACI,6BAAKF,IACL,4BAAIC,WCWLI,MAjBf,SAAkBP,GACd,OACI,8BACKA,EAAMQ,WAAWC,KAAI,SAACC,EAAaC,GAChC,OACI,cAAC,EAAD,CAEIV,GAAIS,EAAYT,GAChBC,KAAMQ,EAAYR,KAClBC,MAAOO,EAAYP,OAHdQ,SCedC,MAtBf,SAAmBZ,GACf,MAAsCa,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAMA,OACI,qBAAKX,UAAU,MAAf,SACI,uBACIY,SAPZ,SAAsBC,GAClBF,EAAeE,EAAEC,OAAOC,OACxBnB,EAAMoB,SAASH,EAAEC,OAAOC,QAMhBA,MAAOL,EACPV,UAAU,mCACViB,KAAK,SACLC,YAAY,mBCNbC,MARf,SAAgBvB,GACZ,OACI,qBAAKwB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACK3B,EAAM4B,Y,4BCkBJC,E,kDApBX,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACTC,UAAW,GAHA,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAG9B,WACI,OAA2B,IAAxBG,KAAKJ,MAAMC,SACJ,0DAEHG,KAAKlC,MAAM4B,a,GAhBCQ,a,MC4CZC,MAvCf,WACI,MAAgDxB,mBAAS,IAAzD,mBAAOyB,EAAP,KAAyBC,EAAzB,KACA,EAAkC1B,mBAAS,IAA3C,mBAAO2B,EAAP,KAAkBC,EAAlB,KAoBA,OAbAC,qBAAU,WACNC,MAAM,8CACDlD,MAAK,SAAAmD,GAAQ,OAAIA,EAASC,UAC1BpD,MAAK,SAAAqD,GAAK,OARnB,SAAqBA,GACjBP,EAAoBO,GACpBL,EAAaK,GAMMC,CAAYD,QACjC,IAS6B,IAA5BR,EAAiBU,OACT,4CAGH,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWgB,SAbvB,SAAsBN,GAClB2B,GAAa,WACT,OAAOH,EAAiBW,QAAO,SAACC,GAC5B,OAAOA,EAAMhD,KAAKiD,cAAcC,SAAStC,EAAYqC,wBAWrD,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3C,WAAYgC,YC9B9Ca,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BlE,M","file":"static/js/main.fc4c6439.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nfunction Card(props) {\n    const { id, name, email } = props;\n    return (\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\n            <div className=\"\">\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from './Card';\n\nfunction CardList(props) {\n    return (\n        <div>\n            {props.robotsCard.map((robotsItems, index) => {\n                return(\n                    <Card \n                        key={index}\n                        id={robotsItems.id}\n                        name={robotsItems.name}\n                        email={robotsItems.email}\n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default CardList;","import React, { useState } from \"react\";\n\nfunction SearchBox(props) {\n    const [searchState, setSearchState] = useState(\"\");\n\n    function handelChange(e) {\n        setSearchState(e.target.value);\n        props.onSearch(e.target.value);\n    }\n    return(\n        <div className=\"pa2\">\n            <input\n                onChange={handelChange}\n                value={searchState}\n                className=\"pa3 ba b--green bg-lightest-blue\"\n                type=\"search\" \n                placeholder=\"Search Robo\" \n            />\n\n        </div>\n        \n    );\n}\n\nexport default SearchBox;","import React from \"react\";\n\nfunction Scroll(props) {\n    return (\n        <div style={{overflowY: \"scroll\", border: \"5px solid black\", height: \"460px\"}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError : false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError : true})\n    }\n\n    render() {\n        if(this.state.hasError === true) {\n            return<h1>Oooops! That is not good</h1>\n        }\n        return this.props.children\n    }\n\n}\n\nexport default ErrorBoundry;","import React, { useEffect, useState } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\n\nfunction App() {\n    const [initialRobotList, setinitialRobotList] = useState([])\n    const [robotList, setRobotList] = useState([])\n\n    function handleUsers(users) {\n        setinitialRobotList(users);\n        setRobotList(users);\n    }\n\n    useEffect(() => {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => response.json())\n            .then(users => handleUsers(users))\n    },[])\n\n    function searchRobots(searchState) {\n        setRobotList(() => {\n            return initialRobotList.filter((robot) => {\n                return robot.name.toLowerCase().includes(searchState.toLowerCase());\n            })\n        })\n    }\n    if(initialRobotList.length === 0) {\n        return <h1>Loading...</h1>\n    } else {\n        return(\n            <div className=\"tc\" >\n                <h1 className=\"f1\" >RoboFriends</h1>\n                <SearchBox onSearch={searchRobots} />\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robotsCard={robotList} />  \n                    </ErrorBoundry>             \n                </Scroll>\n            </div>   \n        );\n    }  \n}\n\nexport default App;\n\n\n// function searchRobots(searchState) {\n        \n//     const newRobotList = robotList.filter((robot) => {\n//         return robot.name.toLowerCase().includes(searchState.toLowerCase());\n//     });\n//     setRobotList(newRobotList)  \n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\nimport App from \"./containers/App\";\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}